# Upgrade websocket requests - https://nginx.org/en/docs/http/websocket.html
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Redirect all http traffic to https
server {
    listen       80 default_server;
    listen  [::]:80 default_server;
    server_name ${HOST} *.${HOST};

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    # Following industry standard ssl config guidelines: https://ssl-config.mozilla.org/

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name             ${HOST} *.${HOST};

    ssl_certificate         /letsencrypt/certs/live/${HOST}/fullchain.pem;
    ssl_trusted_certificate /letsencrypt/certs/live/${HOST}/fullchain.pem;
    ssl_certificate_key     /letsencrypt/certs/live/${HOST}/privkey.pem;
    ssl_session_timeout     1d;
    ssl_session_cache       shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets     off;
    ssl_dhparam             /etc/nginx/dhparam/ffdhe2048.txt;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Allow larger upload than nginx's default
    client_max_body_size    10m;

    location / {
        proxy_pass       'http://${STACK_DEPLOY_NAME}_psinode:8080/';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
